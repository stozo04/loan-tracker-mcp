{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/esm/build/templates/pages-api.js","turbopack:///[project]/src/pages/api/parse-command.ts","turbopack:///[project]/src/lib/parse-command.ts"],"sourcesContent":["import { sendError } from \"next/dist/esm/server/api-utils\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { PagesAPIRouteModule } from \"next/dist/esm/server/route-modules/pages-api/module.compiled\";\nimport { hoist } from \"next/dist/esm/build/templates/helpers\";\n// Import the userland code.\nimport * as userland from \"INNER_PAGE\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default');\n// Re-export config.\nexport const config = hoist(userland, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n    definition: {\n        kind: RouteKind.PAGES_API,\n        page: \"/api/parse-command\",\n        pathname: \"/api/parse-command\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland,\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || ''\n});\nexport async function handler(req, res, ctx) {\n    let srcPage = \"/api/parse-command\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    }\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = getTracer();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: process.env.__NEXT_ALLOWED_REVALIDATE_HEADERS,\n                multiZoneDraftMode: Boolean(process.env.__NEXT_MULTI_ZONE_DRAFT_MODE),\n                trustHostHeader: process.env.__NEXT_TRUST_HOST_HEADER,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/parse-command\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        sendError(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n","// src/pages/api/parse-command.ts\r\nimport type { NextApiRequest, NextApiResponse } from \"next\";\r\nimport {\r\n  makeSystemPrompt,\r\n  APP_TIMEZONE,\r\n  type LLMParseResponse,\r\n} from \"@/lib/parse-command\";\r\n\r\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY as string;\r\nconst MODEL = process.env.LOAN_PARSER_MODEL || \"gpt-5.1\";\r\n\r\nfunction bad(res: NextApiResponse, status: number, message: string) {\r\n  return res.status(status).json({\r\n    action: \"unknown\",\r\n    parameters: {},\r\n    message,\r\n    need_followup: false,\r\n    followup_question: null,\r\n  });\r\n}\r\n\r\nfunction todayInTZ(tz: string): string {\r\n  const d = new Date();\r\n  const parts = new Intl.DateTimeFormat(\"en-CA\", {\r\n    timeZone: tz,\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  }).formatToParts(d);\r\n  const y = parts.find((p) => p.type === \"year\")?.value ?? \"0000\";\r\n  const m = parts.find((p) => p.type === \"month\")?.value ?? \"01\";\r\n  const day = parts.find((p) => p.type === \"day\")?.value ?? \"01\";\r\n  return `${y}-${m}-${day}`;\r\n}\r\n\r\n// Try to parse JSON from any Responses API shape\r\nfunction extractJSON(payload: any): any | null {\r\n  // Preferred convenience field\r\n  if (typeof payload?.output_text === \"string\") {\r\n    const t = payload.output_text.trim();\r\n    if (t) {\r\n      try { return JSON.parse(t); } catch { }\r\n    }\r\n  }\r\n  // Walk output[].content[].text\r\n  const out = payload?.output;\r\n  if (Array.isArray(out)) {\r\n    for (const item of out) {\r\n      const content = item?.content;\r\n      if (Array.isArray(content)) {\r\n        for (const c of content) {\r\n          if (typeof c?.text === \"string\") {\r\n            const txt = c.text.trim();\r\n            if (txt) {\r\n              try { return JSON.parse(txt); } catch { }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Legacy fallback (rare)\r\n  const legacy = payload?.choices?.[0]?.message?.content;\r\n  if (typeof legacy === \"string\") {\r\n    const t = legacy.trim();\r\n    if (t) {\r\n      try { return JSON.parse(t); } catch { }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  if (req.method !== \"POST\") return bad(res, 405, \"Method not allowed.\");\r\n  if (!OPENAI_API_KEY) return bad(res, 500, \"OPENAI_API_KEY is not set.\");\r\n\r\n  const { command } = (req.body ?? {}) as { command?: string };\r\n  if (!command || typeof command !== \"string\") {\r\n    return bad(res, 400, \"Missing 'command' string in body.\");\r\n  }\r\n\r\n  const todayISO = todayInTZ(APP_TIMEZONE);\r\n\r\n  // OVERRIDE the prompt to avoid tool-calls entirely and force raw JSON only.\r\n  const system =\r\n    makeSystemPrompt(todayISO) +\r\n    \"\\n\\nOVERRIDE: Do NOT call any tools. Return ONLY a single JSON object exactly matching the Output contract. No prose.\";\r\n\r\n  try {\r\n    const r = await fetch(\"https://api.openai.com/v1/responses\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${OPENAI_API_KEY}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        model: MODEL,\r\n        input: [\r\n          { role: \"system\", content: system },\r\n          { role: \"user\", content: command },\r\n        ],\r\n        // No text.format schema and no tools – we validate ourselves.\r\n      }),\r\n    });\r\n\r\n    if (!r.ok) {\r\n      const errTxt = await r.text().catch(() => \"\");\r\n      return bad(res, r.status, `OpenAI error: ${errTxt || r.statusText}`);\r\n    }\r\n\r\n    const data = await r.json();\r\n    const parsed = extractJSON(data);\r\n\r\n    if (!parsed || typeof parsed !== \"object\") {\r\n      return bad(res, 502, \"Parser returned no JSON.\");\r\n    }\r\n\r\n    const { action, parameters, message, need_followup, followup_question } = parsed as LLMParseResponse;\r\n\r\n    if (\r\n      !action ||\r\n      typeof message !== \"string\" ||\r\n      typeof need_followup !== \"boolean\" ||\r\n      (need_followup && followup_question !== null && typeof followup_question !== \"string\" && followup_question !== undefined)\r\n    ) {\r\n      return bad(res, 502, \"Structured output missing required fields.\");\r\n    }\r\n\r\n    // Minimal per-action validation when not asking a follow-up\r\n    const p: any = parameters || {};\r\n    if (!need_followup) {\r\n      if (action === \"create_loan\") {\r\n        if (typeof p.loan_name !== \"string\" || typeof p.amount !== \"number\") {\r\n          return bad(res, 400, \"Missing loan_name or amount for create_loan.\");\r\n        }\r\n      } else if (action === \"add_payment\") {\r\n        if (typeof p.loan_name !== \"string\" || typeof p.amount !== \"number\") {\r\n          return bad(res, 400, \"Missing loan_name or amount for add_payment.\");\r\n        }\r\n      } else if (action === \"delete_loan\") {\r\n        if (typeof p.loan_name !== \"string\" && typeof p.loan_id !== \"string\") {\r\n          return bad(res, 400, \"Missing loan_name (or loan_id) for delete_loan.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // ✅ Server-side validation: enforce required fields\r\n    if (action === \"create_loan\" && !need_followup) {\r\n      const { loan_name, amount, loan_date, term_months } = parameters as any;\r\n\r\n      if (!loan_name || !amount || !loan_date || !term_months) {\r\n        return bad(res, 400, \"Missing required fields for create_loan.\");\r\n      }\r\n    }\r\n\r\n    return res.status(200).json({\r\n      action,\r\n      parameters: parameters ?? {},\r\n      message,\r\n      need_followup,\r\n      followup_question: need_followup ? followup_question ?? \"Could you clarify?\" : null,\r\n    } satisfies LLMParseResponse);\r\n  } catch (e: any) {\r\n    return bad(res, 500, `Parser failed: ${e?.message || \"Unknown error\"}`);\r\n  }\r\n}\r\n","// src/lib/parse-command.ts\r\n// LLM-driven parser contract: Types, JSON Schema, and System Prompt\r\n// ---------------------------------------------------------------\r\n\r\n/** Supported actors for payments */\r\nexport type PaidBy = \"Steven\" | \"Katerina\";\r\n\r\n/** Actions the model can choose */\r\nexport type Action = \"create_loan\" | \"add_payment\" | \"get_loans\" | \"delete_loan\" | \"unknown\";\r\n\r\n/** Parameter shapes per action */\r\nexport interface CreateLoanParams {\r\n  loan_name: string;\r\n  amount: number;\r\n  term_months: number;       // REQUIRED\r\n  loan_date: string;         // REQUIRED, YYYY-MM-DD\r\n  lender?: string;\r\n  loan_type?: string;        // default \"general\" is OK\r\n}\r\n\r\nexport interface AddPaymentParams {\r\n  amount: number;\r\n  loan_name: string;\r\n  person?: PaidBy;\r\n  payment_date?: string;     // YYYY-MM-DD\r\n}\r\n\r\nexport type GetLoansParams = { loan_name?: string };\r\n\r\nexport interface DeleteLoanParams {\r\n  loan_name: string;\r\n}\r\n\r\nexport type UnknownParams = Record<string, never>;\r\n\r\n/** Unified response the model must return */\r\nexport interface LLMParseResponse {\r\n  action: Action;\r\n  parameters:\r\n    | CreateLoanParams\r\n    | AddPaymentParams\r\n    | GetLoansParams\r\n    | DeleteLoanParams\r\n    | UnknownParams;\r\n  message: string;            // brief status (e.g., \"Ready to create loan.\" or \"Missing required fields.\")\r\n  need_followup: boolean;     // true if required fields are missing/ambiguous\r\n  followup_question: string | null; // a single concise question when need_followup=true\r\n}\r\n\r\n/**\r\n * JSON Schema for Structured Outputs (per Responses API limitations)\r\n * We keep \"parameters\" permissive and validate per-action in our API layer.\r\n */\r\nexport const RESPONSE_JSON_SCHEMA = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  properties: {\r\n    action: {\r\n      type: \"string\",\r\n      enum: [\"create_loan\", \"add_payment\", \"get_loans\", \"delete_loan\", \"unknown\"],\r\n    },\r\n    parameters: {\r\n      // permissive; model is guided by prompt, server enforces per-action\r\n      type: \"object\",\r\n    },\r\n    message: { type: \"string\" },\r\n    need_followup: { type: \"boolean\" },\r\n    followup_question: { type: [\"string\", \"null\"] },\r\n  },\r\n  required: [\"action\", \"parameters\", \"message\", \"need_followup\", \"followup_question\"],\r\n} as const;\r\n\r\n/**\r\n * Build the system prompt.\r\n * Pass today's date in America/Chicago (YYYY-MM-DD) so the model can resolve relative dates.\r\n * Example: makeSystemPrompt(\"2025-08-27\")\r\n */\r\nexport function makeSystemPrompt(todayISO: string) {\r\n  return `\r\nDeveloper: You are the deterministic parser for a loan-management chat app. Your job is to convert natural-language user input into a single JSON object that exactly matches the Output contract below, or ask a concise follow-up if any required fields are missing.\r\n\r\nBegin with a concise checklist (3-7 bullets) of what you will do; keep the items conceptual, not implementation-level.\r\n\r\nStrict Rules:\r\n- Do NOT call any external tools. Only return a JSON object matching the contract exactly. No prose.\r\n- If required fields are missing or ambiguous, set \"need_followup\" to true, and ask exactly one concise follow-up in \"followup_question\". Populate \"parameters\" only with fields you can confirm.\r\n- Never invent required values. Do not guess unknown amounts, names, or dates.\r\n- Dates must be absolute in \"YYYY-MM-DD\" format, resolved for America/Chicago timezone, with today as ${todayISO}.\r\n- For loan names quoted in the message, use the quoted text. Otherwise, extract a concise, human-friendly loan name from phrases like “for ...”, “on ...”, or “to ...”. Remove any leading \"the \" and any trailing \" loan\"; trim whitespace and punctuation.\r\n- Amounts: Use explicit values marked by \"$\", \"amount\", \"price\", or \"total\". If absent, choose the largest non-date number.\r\n- For payments, only valid people are \"Steven\" and \"Katerina\" (match case-insensitive, output with exact case).\r\n- If the intent is unclear, use action=\"unknown\" and provide an informative \"message\" with \"need_followup\": false.\r\n\r\nREQUIRED fields by action:\r\n- create_loan: loan_name, amount, loan_date (YYYY-MM-DD), term_months\r\n  If any are missing, follow up with one short question including ALL missing fields together.\r\n  Accept relative dates (like “yesterday”, “last Friday”) and resolve to YYYY-MM-DD using America/Chicago.\r\n  Recognize phrasing such as “18 months financing”, “for 18 months”, “18-month” as term_months = 18.\r\n\r\nActions to return:\r\n- \"create_loan\" with { loan_name, amount, loan_date, term_months, lender?, loan_type?=\"general\" }\r\n- \"add_payment\" with { amount, loan_name, person?, payment_date? }\r\n- \"get_loans\" with { loan_name? } // optional: only if requesting a specific loan\r\n- \"delete_loan\" with { loan_name }\r\n- \"unknown\" with {}\r\n\r\nOUTPUT CONTRACT:\r\n{\r\n  \"action\": string,                   // One of: \"create_loan\", \"add_payment\", \"get_loans\", \"delete_loan\", \"unknown\"\r\n  \"parameters\": object,               // Only fields valid for the chosen action, populated only when certain\r\n  \"message\": string,                  // Brief status or guidance\r\n  \"need_followup\": boolean,           // True if follow-up required\r\n  \"followup_question\": string|null    // Null if not needed; otherwise a concise question covering all missing fields\r\n}\r\n\r\nAfter forming the JSON object, validate that all required fields are present for the selected action. If any are missing or ambiguous, ensure \"need_followup\" is true and that \"followup_question\" covers all missing items. Otherwise, confirm completeness and set \"need_followup\" to false.\r\n\r\nEXAMPLES:\r\n\r\n1) Complete create_loan:\r\nUser: Create a new loan for \"Couch\" was purchased on 08/23/2025 for 757.74. We have 48 months financing. This loan is through Synchrony.\r\n{\r\n  \"action\": \"create_loan\",\r\n  \"parameters\": {\r\n    \"loan_name\": \"Couch\",\r\n    \"amount\": 757.74,\r\n    \"term_months\": 48,\r\n    \"loan_date\": \"2025-08-23\",\r\n    \"lender\": \"Synchrony\",\r\n    \"loan_type\": \"general\"\r\n  },\r\n  \"message\": \"Ready to create loan.\",\r\n  \"need_followup\": false,\r\n  \"followup_question\": null\r\n}\r\n\r\n2) create_loan, needs fields:\r\nUser: I would like to add a loan.\r\n{\r\n  \"action\": \"create_loan\",\r\n  \"parameters\": {},\r\n  \"message\": \"Missing required fields.\",\r\n  \"need_followup\": true,\r\n  \"followup_question\": \"What are the loan name, amount, loan date (YYYY-MM-DD), and term in months?\"\r\n}\r\n\r\n2b) create_loan, partial info:\r\nUser: The loan is \"Mirror\" and I purchased it for $1,000.\r\n{\r\n  \"action\": \"create_loan\",\r\n  \"parameters\": { \"loan_name\": \"Mirror\", \"amount\": 1000 },\r\n  \"message\": \"Missing required fields.\",\r\n  \"need_followup\": true,\r\n  \"followup_question\": \"What are the loan date (YYYY-MM-DD) and term in months?\"\r\n}\r\n\r\n3) Add payment with relative date:\r\nUser: Steven paid $125 to \"Dining Chairs\" yesterday.\r\n{\r\n  \"action\": \"add_payment\",\r\n  \"parameters\": {\r\n    \"amount\": 125,\r\n    \"loan_name\": \"Dining Chairs\",\r\n    \"person\": \"Steven\",\r\n    \"payment_date\": \"${todayISO ? resolveRelative(todayISO, -1) : \"YYYY-MM-DD\"}\"\r\n  },\r\n  \"message\": \"Ready to add payment.\",\r\n  \"need_followup\": false,\r\n  \"followup_question\": null\r\n}\r\n\r\n4) get_loans, summary:\r\nUser: Summarize my loans.\r\n{\r\n  \"action\": \"get_loans\",\r\n  \"parameters\": {},\r\n  \"message\": \"Fetching loan summary.\",\r\n  \"need_followup\": false,\r\n  \"followup_question\": null\r\n}\r\n\r\n4b) get_loans, details:\r\nUser: Tell me more about the Tesla loan.\r\n{\r\n  \"action\": \"get_loans\",\r\n  \"parameters\": { \"loan_name\": \"Tesla\" },\r\n  \"message\": \"Fetching loan details.\",\r\n  \"need_followup\": false,\r\n  \"followup_question\": null\r\n}\r\n\r\n5) delete_loan:\r\nUser: Delete the Dining Chairs loan.\r\n{\r\n  \"action\": \"delete_loan\",\r\n  \"parameters\": { \"loan_name\": \"Dining Chairs\" },\r\n  \"message\": \"Ready to delete loan.\",\r\n  \"need_followup\": false,\r\n  \"followup_question\": null\r\n}\r\n\r\n6) Unknown:\r\nUser: Can you make it nicer somehow?\r\n{\r\n  \"action\": \"unknown\",\r\n  \"parameters\": {},\r\n  \"message\": \"I can create loans, add payments, show loans, or delete a loan. What would you like to do?\",\r\n  \"need_followup\": false,\r\n  \"followup_question\": null\r\n}\r\n\r\nNOTES:\r\n- For create_loan, if \"loan_type\" is not provided, default to \"general\" (may include or omit as you prefer).\r\n- If user says \"the couch loan\", normalize to \"Couch\".\r\n- Always output a single JSON object matching the schema above. No additional text.\r\n\r\n\r\n`.trim();\r\n}\r\n\r\n/**\r\n * Helper for the prompt example: leave the resolution instruction in-text.\r\n * The API layer will provide the actual todayISO and the model will compute.\r\n * (No runtime use here.)\r\n */\r\nfunction resolveRelative(today: string, daysDelta: number): string {\r\n  const dt = new Date(today + \"T12:00:00-05:00\"); // center of day CST/CDT to avoid DST edges\r\n  dt.setDate(dt.getDate() + daysDelta);\r\n  return dt.toISOString().slice(0, 10);\r\n}\r\n\r\n// Re-export a canonical timezone constant for the API layer (optional convenience)\r\nexport const APP_TIMEZONE = \"America/Chicago\";\r\n"],"names":[],"mappings":"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","ignoreList":[0]}