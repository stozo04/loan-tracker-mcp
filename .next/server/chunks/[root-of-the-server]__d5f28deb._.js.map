{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/esm/build/templates/pages-api.js","turbopack:///[project]/src/pages/api/chats.ts"],"sourcesContent":["import { sendError } from \"next/dist/esm/server/api-utils\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { PagesAPIRouteModule } from \"next/dist/esm/server/route-modules/pages-api/module.compiled\";\nimport { hoist } from \"next/dist/esm/build/templates/helpers\";\n// Import the userland code.\nimport * as userland from \"INNER_PAGE\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default');\n// Re-export config.\nexport const config = hoist(userland, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n    definition: {\n        kind: RouteKind.PAGES_API,\n        page: \"/api/chats\",\n        pathname: \"/api/chats\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland,\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || ''\n});\nexport async function handler(req, res, ctx) {\n    let srcPage = \"/api/chats\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    }\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = getTracer();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: process.env.__NEXT_ALLOWED_REVALIDATE_HEADERS,\n                multiZoneDraftMode: Boolean(process.env.__NEXT_MULTI_ZONE_DRAFT_MODE),\n                trustHostHeader: process.env.__NEXT_TRUST_HOST_HEADER,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/chats\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        sendError(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n","// src/pages/api/chats.ts\r\nimport type { NextApiRequest, NextApiResponse } from \"next\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\n// Prefer service role on the server (stays private), fallback to anon if needed\r\nconst NEXT_PUBLIC_SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL as string;\r\nconst SERVICE_KEY =\r\n  (process.env.SUPABASE_SERVICE_ROLE_KEY as string) ||\r\n  (process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string);\r\n\r\nif (!NEXT_PUBLIC_SUPABASE_URL || !SERVICE_KEY) {\r\n  console.warn(\"[/api/chats] Missing Supabase env vars\");\r\n}\r\n\r\nconst supabase = createClient(NEXT_PUBLIC_SUPABASE_URL, SERVICE_KEY, {\r\n  auth: { persistSession: false },\r\n});\r\n\r\ntype ChatRow = {\r\n  id: string;\r\n  session_id: string;\r\n  role: \"user\" | \"assistant\" | \"system\";\r\n  content: string;\r\n  response_json: any | null;\r\n  action: string | null;\r\n  need_followup: boolean | null;\r\n  created_at: string; // ISO\r\n};\r\n\r\ntype SessionSummary = {\r\n  session_id: string;\r\n  message_count: number;\r\n  started_at: string;\r\n  last_at: string;\r\n  last_snippet: string;\r\n};\r\n\r\nfunction bad(res: NextApiResponse, status: number, error: string) {\r\n  return res.status(status).json({ success: false, error });\r\n}\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  if (req.method !== \"GET\") {\r\n    return bad(res, 405, \"Method not allowed\");\r\n  }\r\n\r\n  const { session_id, after, limit: limitStr } = req.query as {\r\n    session_id?: string;\r\n    after?: string;\r\n    limit?: string;\r\n  };\r\n\r\n  const limit = Math.min(Math.max(parseInt(limitStr || \"100\", 10) || 100, 1), 500);\r\n\r\n  try {\r\n    if (session_id) {\r\n      // === Return messages for a specific session ===\r\n      let q = supabase\r\n        .from(\"loan_tracker_chat_messages\")\r\n        .select(\"id,session_id,role,content,response_json,action,need_followup,created_at\")\r\n        .eq(\"session_id\", session_id)\r\n        .order(\"created_at\", { ascending: true })\r\n        .limit(limit);\r\n\r\n      if (after) q = q.gt(\"created_at\", after);\r\n\r\n      const { data, error } = await q;\r\n      if (error) throw error;\r\n\r\n      return res.status(200).json({\r\n        success: true,\r\n        data: { session_id, messages: (data as ChatRow[]) ?? [] },\r\n      });\r\n    }\r\n\r\n    // === No session_id → list recent sessions ===\r\n    // Strategy: pull recent N messages and group in-memory into distinct sessions.\r\n    const { data, error } = await supabase\r\n      .from(\"loan_tracker_chat_messages\")\r\n      .select(\"session_id,created_at,role,content\")\r\n      .order(\"created_at\", { ascending: false })\r\n      .limit(1000); // plenty; we’ll compress to unique sessions below\r\n    if (error) throw error;\r\n\r\n    const sessions = new Map<string, SessionSummary>();\r\n\r\n    (data ?? []).forEach((r: any) => {\r\n      const sid = r.session_id as string;\r\n      const created = new Date(r.created_at).toISOString();\r\n      const existing = sessions.get(sid);\r\n      if (!existing) {\r\n        sessions.set(sid, {\r\n          session_id: sid,\r\n          message_count: 1,\r\n          started_at: created,\r\n          last_at: created,\r\n          last_snippet: (r.content || \"\").toString().slice(0, 140),\r\n        });\r\n      } else {\r\n        existing.message_count += 1;\r\n        existing.started_at = created < existing.started_at ? created : existing.started_at;\r\n        existing.last_at = created > existing.last_at ? created : existing.last_at;\r\n      }\r\n    });\r\n\r\n    const list = Array.from(sessions.values())\r\n      .sort((a, b) => b.last_at.localeCompare(a.last_at))\r\n      .slice(0, Math.min(limit, 200));\r\n\r\n    return res.status(200).json({ success: true, data: { sessions: list } });\r\n  } catch (e: any) {\r\n    console.error(\"[/api/chats] error:\", e);\r\n    return bad(res, 500, e?.message || \"Unexpected error\");\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}