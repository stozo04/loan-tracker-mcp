{"version":3,"sources":["turbopack:///[project]/src/pages/chat/logs.tsx","turbopack:///[project]/node_modules/next/dist/esm/build/templates/pages.js","turbopack:///[project]/src/lib/chat-api.ts"],"sourcesContent":["// src/pages/chat/logs.tsx\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchChatSessions, fetchChatMessages } from \"@/lib/chat-api\";\r\n\r\nexport default function ChatLogs() {\r\n  const [sessions, setSessions] = useState<any[]>([]);\r\n  const [active, setActive] = useState<string | null>(null);\r\n  const [messages, setMessages] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchChatSessions(50).then(d => setSessions(d.sessions)).catch(console.error);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!active) return;\r\n    fetchChatMessages(active, { limit: 500 }).then(d => setMessages(d.messages)).catch(console.error);\r\n  }, [active]);\r\n\r\n  return (\r\n    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n      <div>\r\n        <h2 className=\"font-semibold mb-2\">Sessions</h2>\r\n        <ul className=\"space-y-2\">\r\n          {sessions.map(s => (\r\n            <li key={s.session_id}>\r\n              <button\r\n                className={`w-full text-left p-2 rounded ${active === s.session_id ? \"bg-indigo-100\" : \"hover:bg-gray-100\"}`}\r\n                onClick={() => setActive(s.session_id)}\r\n              >\r\n                <div className=\"text-sm font-mono truncate\">{s.session_id}</div>\r\n                <div className=\"text-xs text-gray-600\">\r\n                  {new Date(s.started_at).toLocaleString()} → {new Date(s.last_at).toLocaleString()}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">{s.message_count} messages</div>\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"md:col-span-2\">\r\n        <h2 className=\"font-semibold mb-2\">Messages {active ? `(${active})` : \"\"}</h2>\r\n        <div className=\"space-y-3\">\r\n          {messages.map(m => (\r\n            <div key={m.id} className=\"border rounded p-3\">\r\n              <div className=\"text-xs text-gray-500\">{new Date(m.created_at).toLocaleString()} · {m.role}</div>\r\n              <div className=\"whitespace-pre-wrap\">{m.content}</div>\r\n              {m.action && (\r\n                <div className=\"mt-2 text-xs text-gray-600\">\r\n                  action: <span className=\"font-mono\">{m.action}</span>\r\n                  {typeof m.need_followup === \"boolean\" ? ` · need_followup: ${m.need_followup}` : \"\"}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {!messages.length && active && (\r\n            <div className=\"text-sm text-gray-500\">No messages yet.</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { PagesRouteModule } from \"next/dist/esm/server/route-modules/pages/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { hoist } from \"next/dist/esm/build/templates/helpers\";\n// Import the app and document modules.\nimport * as document from \"INNER_DOCUMENT\";\nimport * as app from \"INNER_APP\";\n// Import the userland code.\nimport * as userland from \"INNER_PAGE\";\nimport { getHandler } from \"next/dist/esm/server/route-modules/pages/pages-handler\";\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default');\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps');\nexport const getStaticPaths = hoist(userland, 'getStaticPaths');\nexport const getServerSideProps = hoist(userland, 'getServerSideProps');\nexport const config = hoist(userland, 'config');\nexport const reportWebVitals = hoist(userland, 'reportWebVitals');\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(userland, 'unstable_getStaticProps');\nexport const unstable_getStaticPaths = hoist(userland, 'unstable_getStaticPaths');\nexport const unstable_getStaticParams = hoist(userland, 'unstable_getStaticParams');\nexport const unstable_getServerProps = hoist(userland, 'unstable_getServerProps');\nexport const unstable_getServerSideProps = hoist(userland, 'unstable_getServerSideProps');\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n    definition: {\n        kind: RouteKind.PAGES,\n        page: \"/chat/logs\",\n        pathname: \"/chat/logs\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    components: {\n        // default export might not exist when optimized for data only\n        App: app.default,\n        Document: document.default\n    },\n    userland\n});\nexport const handler = getHandler({\n    srcPage: \"/chat/logs\",\n    config,\n    userland,\n    routeModule,\n    getStaticPaths,\n    getStaticProps,\n    getServerSideProps\n});\n\n//# sourceMappingURL=pages.js.map\n","// src/lib/chat-api.ts\r\nexport type ChatMessageRow = {\r\n    id: string;\r\n    session_id: string;\r\n    role: \"user\" | \"assistant\" | \"system\";\r\n    content: string;\r\n    response_json: any | null;\r\n    action: string | null;\r\n    need_followup: boolean | null;\r\n    created_at: string;\r\n  };\r\n  \r\n  export type ChatSessionSummary = {\r\n    session_id: string;\r\n    message_count: number;\r\n    started_at: string;\r\n    last_at: string;\r\n    last_snippet: string;\r\n  };\r\n  \r\n  export async function fetchChatMessages(sessionId: string, opts?: { after?: string; limit?: number }) {\r\n    const params = new URLSearchParams({ session_id: sessionId });\r\n    if (opts?.after) params.set(\"after\", opts.after);\r\n    if (opts?.limit) params.set(\"limit\", String(opts.limit));\r\n  \r\n    const r = await fetch(`/api/chats?${params.toString()}`);\r\n    const json = await r.json();\r\n    if (!r.ok || !json?.success) {\r\n      throw new Error(json?.error || `${r.status} ${r.statusText}`);\r\n    }\r\n    return json.data as { session_id: string; messages: ChatMessageRow[] };\r\n  }\r\n  \r\n  export async function fetchChatSessions(limit = 50) {\r\n    const r = await fetch(`/api/chats?limit=${limit}`);\r\n    const json = await r.json();\r\n    if (!r.ok || !json?.success) {\r\n      throw new Error(json?.error || `${r.status} ${r.statusText}`);\r\n    }\r\n    return json.data as { sessions: ChatSessionSummary[] };\r\n  }\r\n  "],"names":[],"mappings":"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","ignoreList":[1]}